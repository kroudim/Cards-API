// <auto-generated />
using System;
using CityInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CardContext))]
    [Migration("20240124120010_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityInfo.API.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Color 1",
                            CreationTime = new DateTime(2024, 1, 24, 14, 0, 10, 317, DateTimeKind.Local).AddTicks(9692),
                            Description = "Description 1",
                            Name = "Card 1",
                            Status = "ToDo",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "Color 2",
                            CreationTime = new DateTime(2024, 1, 24, 14, 0, 10, 317, DateTimeKind.Local).AddTicks(9740),
                            Description = "Description 2",
                            Name = "Card 2",
                            Status = "ToDo",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Color = "Color 3",
                            CreationTime = new DateTime(2024, 1, 24, 14, 0, 10, 317, DateTimeKind.Local).AddTicks(9742),
                            Description = "Description 3",
                            Name = "Card 3",
                            Status = "ToDo",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@email.com",
                            Password = "password 1",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@email.com",
                            Password = "password 2",
                            Role = "Member"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user3@email.com",
                            Password = "password 3",
                            Role = "Member"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.Card", b =>
                {
                    b.HasOne("CityInfo.API.Entities.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CityInfo.API.Entities.User", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
